name: push

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Set up environment variables
        run: |
          echo "DB_CONNECTION=${{ secrets.DB_CONNECTION }}" >> app/.env
          echo "DB_PORT=${{ secrets.DB_PORT }}" >> app/.env
          echo "DATABASE_HOST=${{ secrets.DATABASE_HOST }}" >> app/.env
          echo "DATABASE_NAME=${{ secrets.DATABASE_NAME }}" >> app/.env
          echo "DATABASE_USERNAME=${{ secrets.DATABASE_USERNAME }}" >> app/.env
          echo "DATABASE_PASSWORD=${{ secrets.DATABASE_PASSWORD }}" >> app/.env

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Retrieve the latest Git tag
      - name: Retrieve latest Git tag
        id: get_version
        run: |
          VERSION=$(git describe --tags --abbrev=0)
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "Version is $VERSION"

      # Build and Push Docker Image with the retrieved Git tag
      - name: Build and Push Docker Image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: Dockerfile.production
          push: true
          tags: |
            ruslan0688/laravel-app-devops:latest
            ruslan0688/laravel-app-devops:${{ env.VERSION }}

      # Optionally, bump the version for the next release
      - name: Bump version for next tag (optional)
        id: bump_version
        run: |
          VERSION=$(git describe --tags --abbrev=0)
          IFS='.' read -r -a version_parts <<< "$VERSION"
          new_patch_version=$((version_parts[2] + 1))
          NEW_VERSION="${version_parts[0]}.${version_parts[1]}.$new_patch_version"
          echo "New Version: $NEW_VERSION"
          git tag $NEW_VERSION
          git push origin $NEW_VERSION

