push.yml:

name: push

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Set up environment variables
        run: |
          echo "DB_CONNECTION=${{ secrets.DB_CONNECTION }}" >> app/.env
          echo "DB_PORT=${{ secrets.DB_PORT }}" >> app/.env
          echo "DATABASE_HOST=${{ secrets.DATABASE_HOST }}" >> app/.env
          echo "DATABASE_NAME=${{ secrets.DATABASE_NAME }}" >> app/.env
          echo "DATABASE_USERNAME=${{ secrets.DATABASE_USERNAME }}" >> app/.env
          echo "DATABASE_PASSWORD=${{ secrets.DATABASE_PASSWORD }}" >> app/.env

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Read version from VERSION file
        id: vars
        run: |
          VERSION=$(cat VERSION)
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "Version is $VERSION"

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: Dockerfile.production
          push: true
          tags: |
            ruslan0688/laravel-app-devops:latest
            ruslan0688/laravel-app-devops:${{ env.VERSION }}

      - name: Update VERSION file
        id: update_version
        run: |
          CURRENT_VERSION=$(cat VERSION)
          NEW_VERSION=$(echo $CURRENT_VERSION | awk -F. -v OFS=. '{$NF++;print}')
          echo "Current Version: $CURRENT_VERSION"
          echo "New Version: $NEW_VERSION"
          echo $NEW_VERSION > VERSION
          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV
